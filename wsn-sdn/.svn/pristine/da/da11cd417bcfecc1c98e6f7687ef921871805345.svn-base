//package org.apache.servicemix.wsn.router.mgr;
//
//import java.io.ObjectInputStream;
//import java.io.ObjectOutputStream;
//import java.net.Socket;
//import java.util.ArrayList;
//import java.util.List;
//import java.util.concurrent.ArrayBlockingQueue;
//
//import org.apache.commons.logging.Log;
//import org.apache.commons.logging.LogFactory;
//
//public class ConnectPoolS {
//	private static Log log = LogFactory.getLog(ConnectPoolS.class);
//
//	private List<Socket> socketlist;
//	private List<ObjectOutputStream> outputlist;
//	private List<ObjectInputStream> inputlist;
//	private int capacity;
//
//	public ConnectPoolS(int capacity) {
//		socketlist = new ArrayList<Socket>(capacity);
//		outputlist = new ArrayList<ObjectOutputStream>(capacity);
//		inputlist = new ArrayList<ObjectInputStream>(capacity);
//		this.capacity = capacity;
//
//		for (int i = 0; i < capacity; i++) {//初始化连接池
//			socketlist.add(i, null);
//			outputlist.add(i, null);
//			inputlist.add(i, null);
//		}
//	}
//
//	//判断tcp发送连接池是否为空
//	protected boolean isSlistNoFull() {
//		for (int i = 0; i < capacity; i++) {
//			if (socketlist.get(i) == null)
//				return true;
//			else if (socketlist.get(i).isClosed()) {
//				socketlist.set(i, null);
//				return true;
//			}
//		}
//		return false;
//	}
//
//	//将新socket，output，input放入tcp发送连接池
//	protected void addSList(int i, Socket s, ObjectOutputStream oosTcp, ObjectInputStream oisTcp) {
//
//		socketlist.set(i, s);
//		outputlist.set(i, oosTcp);
//		inputlist.set(i, oisTcp);
//
//	}
//
//	//取tcp发送连接池中存储的
//	protected Socket getSList(int i) {
//
//		return socketlist.get(i);
//
//	}
//
//	//取tcp发送连接池的输出流
//	protected ObjectOutputStream getSoList(int i) {
//
//		return outputlist.get(i);
//
//	}
//
//	//取tcp发送连接池的输入流
//	protected ObjectInputStream getSiList(int i) {
//
//		return inputlist.get(i);
//
//	}
//
//}
